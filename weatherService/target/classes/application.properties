spring.application.name=weatherservice

spring.datasource.url=jdbc:mysql://localhost:3306/weather-service?createDatabaseIfNotExist=true
spring.datasource.username=${db_username:root}
spring.datasource.password=${db_password:root}
spring.jpa.hibernate.ddl-auto=update

server.port=8080
#spring.security.user.name=user
#spring.security.user.password=password

logging.level.org.springframework.security.web = DEBUG
logging.level.io.github.resilience4j.circuitbreaker=DEBUG

#swagger url
springdoc.swagger-ui.path=/swagger-ui.html

#weather.api.base-url=https://api.weather.gov
weather.api.base-url=http://localhost:8082
# change the below URL to check circuit breaker pattern
weather.api.zones-endpoint=/alerts/active/count
weather.api.gridendpoint=/gridpoints/{locationId}/{gridX},{gridY}/forecast

# Service discovery 
#eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

# enable actuatorforecast
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# Resilience4j Properties
resilience4j.circuitbreaker.instances.forecast.register-health-indicator=true
resilience4j.circuitbreaker.instances.forecast.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.forecast.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.forecast.sliding-window-size=5
resilience4j.circuitbreaker.instances.forecast.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.forecast.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.forecast.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.forecast.automatic-transition-from-open-to-half-open-enabled=true


# Resilinece4j Timeout preoperties
resilience4j.timelimiter.instances.forecast.timeout-duration=3s